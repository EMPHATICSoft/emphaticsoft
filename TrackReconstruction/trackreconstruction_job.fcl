#include "TrackReconstruction.fcl"

process_name: ReconstructTrack

services:
{
  TFileService: { fileName: "reconstructedTrack.root" closeFileFast: false }
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName:    "reconstructedTrack.root"
   fastCloning: false
   
  }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:{}

 filters:{}

 analyzers:
 {
  construct: @local::reconstruct_tracks
 }

 # stream1:  [ out1 ] #could have multiple paths
 ana: [ construct ] 

 end_paths:     [ana]  #end_path are things that do not modify art::Event, includes analyzers and output modules. all items here can be run simultaneously
}
