#include "evd_services.fcl"
#include "Geometry.fcl"

process_name: EVD


services:
{
  RandomNumberGenerator: {} #ART native random number generator
  Geometry:  @local::standard_geometry

#  @table::core_services

  # EVD services
  PlotDrawingOptions:       @local::standard_plotdrawingopt
  GeometryDrawingOptions:   @local::standard_geomdrawingopt
  SimulationDrawingOptions: @local::standard_simdrawingopt
  RawDrawingOptions:        @local::standard_rawdrawingopt
  RecoDrawingOptions:       @local::standard_recodrawingopt
#  ScanOptions:              @local::standard_scanopt
#  SliceNavigator:           @local::standard_slicenavigator
  Colors:                   @local::standard_colors
  EventDisplay:             @local::standard_evd
}

#Look at the input files
source:
{
  module_type: RootInput
  fileNames:   [ "emphdata.root" ]
  maxEvents:   -1       # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
  analyzers:
  {
    evdisp:
    {
      module_type: EVD
    }
  }

  #list the modules for this path, order matters, filters reject all following items
  evd: [ evdisp ]

  #end_path are things that do not modify art::Event, includes analyzers and output modules. 
  #all items here can be run simultaneously
  end_paths: [ evd ]
}
