#include "MomReco.fcl"

#include "MakeSSDClusters.fcl"
#include "ChannelMap.fcl"
#include "Geometry.fcl"
#include "FillDataQuality.fcl"
#include "RunHistory.fcl"

process_name: SSDAlignment

services:
{
  TFileService: { fileName: "mom_reco_hist_r%r_s%s.root" closeFileFast: false }
  ChannelMapService: @local::standard_channelmap
  Geometry:   @local::standard_geometry
  RunHistoryService: @local::standard_runhistory
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName:    "mom_reco_hist_r%r_s%s.root"
   fastCloning: false
   
  }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
	dataqual:     @local::standard_dataqual
	clust:        @local::standard_ssdclust
	momreco:      @local::standard_momreco
 }	

 reco: [ dataqual, clust, momreco ]
	
 analyzers:{}

 trigger_paths: [ reco ]

 stream1: [ out1 ]

}
