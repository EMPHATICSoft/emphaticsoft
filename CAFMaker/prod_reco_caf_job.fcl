#include "Services.fcl"

#include "CAFMaker.fcl"

#include "FillDataQuality.fcl"
#include "SpillInfo.fcl"
#include "MakeArichCluster.fcl"
#include "ARICHReco.fcl"
#include "MakeRing.fcl"
#include "MakeSSDClusters.fcl"
#include "ADCReco.fcl"
#include "BACkovHitReco.fcl"
#include "GasCkovHitReco.fcl"
#include "MakeTrackSegments.fcl"
#include "MakeSingleTracks.fcl"
#include "SingleTrackAlignment.fcl"

process_name: CAF

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "%ifb_reco_cafmaker_hist.root" closeFileFast: false }
  scheduler: { wantSummary: false }
  TimeTracker: {}
  @table::standard_services

  IFBeam:{}
}

#Start each new event with an empty event.
source:
{
  module_type: RootInput
  maxEvents:   -1
}

physics:
{
  producers:
  {
    dataqual:     @local::standard_dataqual
    spillinfo:    @local::standard_spillinfo
    arichcluster: @local::standard_arich_cluster
    arichreco:    @local::standard_arichreco
    arichring:    @local::standard_arich_ring
    clust:        @local::standard_ssdclust
    adcreco:      @local::standard_adcreco
    backovreco:   @local::standard_backovhitreco
    gasckovreco:  @local::standard_gasckovhitreco
    cafmaker:     @local::standard_cafmaker

    maketracksegments: @local::standard_maketracksegments
    makesingletracks: @local::standard_makesingletracks
    singletrackalignment: @local::standard_singletrackalignment
  }

  analyzers:{}

  makecaf:   [
               dataqual, spillinfo, arichcluster, clust,
               maketracksegments, makesingletracks, arichring, arichreco, #singletrackalignment,
              # adcreco, backovreco, gasckovreco,
               cafmaker
             ]

}
physics.producers.clust.FillTTree: false
physics.producers.cafmaker.GetMCTruth: true #include when producing MC CAF's
