#include "Services.fcl"
#include "CaloProd.fcl"

process_name: CaloProd

services:
{
  TFileService: { fileName: "caloprod_r%r_s%s.root" closeFileFast: false }
  @table::standard_services
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName:    "emphdata-caloprod_r%r_s%s.root"
   fastCloning: false

  }
}
# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   #     dataqual:     @local::standard_dataqual
   #     clust:        @local::standard_ssdclust
   #     momreco:      @local::standard_momreco
   caloprod: @local::standard_caloprod
 }

 reco: [ caloprod ]

 analyzers:{}

 trigger_paths: [ reco ]

 stream1: [ out1 ]

}
