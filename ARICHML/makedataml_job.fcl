#include "Services.fcl"
#include "GetDataML.fcl"
#include "SSDDigitizer.fcl"
#include "ARICHDigitizer.fcl"
#include "RelabelRawDigitModules.fcl"
#include "MakeArichCluster.fcl"

process_name: GetDataML

services:
{
  TFileService: { fileName: "%ifb.dataML.root" closeFileFast: false }
  @table::standard_services
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

outputs:
{
 out1:
  {
   module_type: RootOutput
   fileName: 	"%ifb.dataML.root" 
   fastCloning: false
   
  }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
  producers:

   {	
    rawSSD:        @local::standard_ssddigitizer
    rawARICH:      @local::standard_arichdigitizer
    raw:           @local::standard_digitrelabel	
 
    arichcluster: @local::standard_arich_cluster 
   }


  analyzers:
 {
	getdata: @local::standard_getdataML
 }	

  prods: [ rawSSD, rawARICH, raw, arichcluster ]

  trigger_paths: [ prods]
 
  e1: [getdata]	
  filters:{}
  end_paths: [e1]

  stream1: [ out1 ]

}
